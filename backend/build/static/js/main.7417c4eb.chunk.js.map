{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["mapContainerStyle","width","height","center","lat","lng","App","useLoadScript","googleMapsApiKey","process","isLoaded","loadError","useState","position","setPosition","undefined","console","log","className","zoom","options","scrollwheel","zoomControl","gestureHandling","onClick","e","test","JSON","stringify","latLng","getLatLng","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOAMMA,EAAmB,CACvBC,MAAO,QACPC,OAAQ,SAGJC,EAAQ,CACZC,IAAI,GACJC,IAAI,GAIS,SAASC,IAEtB,MAA6BC,YAAe,CAC1CC,iBAAkBC,4CADdC,EAAN,EAAMA,SAAUC,EAAhB,EAAgBA,UAOhB,EAAgCC,qBAAhC,mBAAOC,EAAP,KAAiBC,EAAjB,KAYA,OAAGH,EAAkB,qBACjBD,QACYK,IAAbF,GAAwBG,QAAQC,IAAI,mBAerC,qBAAKC,UAAU,MAAf,SACE,cAAC,IAAD,CAAWlB,kBAAmBA,EAAoBmB,KAAM,EAAGC,QAAS,CAACC,aAAa,EAAOC,aAAa,EAAMC,gBAAiB,QAAUpB,OAAQA,EAAQqB,QAAS,SAACC,IA5BnJ,SAACA,GAEjB,IAAMC,EAAOC,KAAKC,UAAUH,EAAEI,QAE9Bf,EAAYY,GAEZV,QAAQC,IAAIJ,GAsB4JiB,CAAUL,SAjB/J,eCvCvB,IAYeM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7417c4eb.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { GoogleMap, useLoadScript, Marker, InfoWindow} from \"@react-google-maps/api\";\nimport './App.css';\nimport { env } from 'process';\n\n\nconst mapContainerStyle ={\n  width: \"100vw\",\n  height: \"100vh\",\n}\n\nconst center ={ \n  lat:20,\n  lng:5,\n};\n\n\nexport default function App() {\n\n  const{isLoaded, loadError} = useLoadScript ({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY\n  });\n\n  \n\n \n  const [position, setPosition] = useState();\n\n  const getLatLng = (e) => {\n\n    const test = JSON.stringify(e.latLng)\n\n    setPosition(test)\n\n    console.log(position)\n\n  }\n\n  if(loadError) return \"Error loading maps\";\n  if(!isLoaded) return \"Loading Maps\";\n  if(position === undefined) console.log(\"Input not valid\")\n\n  \n\n\n\n  \n\n\n\n  \n\n\n  return (\n    \n    <div className=\"map\">\n      <GoogleMap mapContainerStyle={mapContainerStyle}  zoom={3} options={{scrollwheel: false, zoomControl: false,gestureHandling: \"none\" }} center={center} onClick={(e)=>{getLatLng(e)}}></GoogleMap>\n    </div>\n  )\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}